// <auto-generated />
using System;
using APIMonstre.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIMonstre.Migrations
{
    [DbContext(typeof(MonstreContext))]
    [Migration("20250926195529_AjouterInstanceMonstre")]
    partial class AjouterInstanceMonstre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("APIMonstre.Models.InstanceMonstre", b =>
                {
                    b.Property<int>("PositionX")
                        .HasColumnType("int");

                    b.Property<int>("PositionY")
                        .HasColumnType("int");

                    b.Property<int>("MonstreId")
                        .HasColumnType("int");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<int>("PointsVieActuels")
                        .HasColumnType("int");

                    b.Property<int>("PointsVieMax")
                        .HasColumnType("int");

                    b.HasKey("PositionX", "PositionY");

                    b.HasIndex("MonstreId");

                    b.ToTable("InstanceMonstre");
                });

            modelBuilder.Entity("APIMonstre.Models.Monster", b =>
                {
                    b.Property<int>("IdMonster")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMonster"));

                    b.Property<int>("DefenseBase")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceBase")
                        .HasColumnType("int");

                    b.Property<int>("ForceBase")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PointsVieBase")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<string>("SpriteURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type2")
                        .HasColumnType("longtext");

                    b.HasKey("IdMonster")
                        .HasName("PrimaryKey_MonsterId");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("APIMonstre.Models.Personnage", b =>
                {
                    b.Property<int>("IdPersonnage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPersonnage"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Force")
                        .HasColumnType("int");

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("int");

                    b.Property<int>("Niveau")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PointsVie")
                        .HasColumnType("int");

                    b.Property<int>("PointsVieMax")
                        .HasColumnType("int");

                    b.Property<int>("PositionX")
                        .HasColumnType("int");

                    b.Property<int>("PositionY")
                        .HasColumnType("int");

                    b.HasKey("IdPersonnage")
                        .HasName("PrimaryKey_PersonnageId");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Personnage");
                });

            modelBuilder.Entity("APIMonstre.Models.Tuile", b =>
                {
                    b.Property<int>("PositionX")
                        .HasColumnType("int");

                    b.Property<int>("PositionY")
                        .HasColumnType("int");

                    b.Property<bool>("EstTraversable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PositionX", "PositionY");

                    b.ToTable("Tuile");
                });

            modelBuilder.Entity("APIMonstre.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUtilisateur"));

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("estConnecte")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdUtilisateur")
                        .HasName("PrimaryKey_UtilisateurId");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("APIMonstre.Models.InstanceMonstre", b =>
                {
                    b.HasOne("APIMonstre.Models.Monster", "Monstre")
                        .WithMany()
                        .HasForeignKey("MonstreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIMonstre.Models.Tuile", "Tuile")
                        .WithMany()
                        .HasForeignKey("PositionX", "PositionY")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monstre");

                    b.Navigation("Tuile");
                });

            modelBuilder.Entity("APIMonstre.Models.Personnage", b =>
                {
                    b.HasOne("APIMonstre.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });
#pragma warning restore 612, 618
        }
    }
}
